(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{"1LMR":function(n,e,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/RangeSlider",function(){return a("i/q+")}])},"i/q+":function(n,e,a){"use strict";a.r(e);var t=a("sKcO"),o=a("opOY"),p=a.n(o),r=a("yr7G"),m=["components"],s=p.a.createElement;e.default=function(n){var e=n.components;Object(t.a)(n,m);return s(r.MDXTag,{name:"wrapper",components:e},s(r.MDXTag,{name:"h1",components:e,props:{id:"rangeslider"}},s(r.MDXTag,{name:"a",components:e,parentName:"h1",props:{href:"#rangeslider","aria-hidden":"true"}},s(r.MDXTag,{name:"span",components:e,parentName:"a",props:{className:"icon icon-link"}})),"RangeSlider"),s(r.MDXTag,{name:"p",components:e},"A single or multi-value range input based on ",s(r.MDXTag,{name:"a",components:e,parentName:"p",props:{href:"https://github.com/react-component/slider"}},"react-component-slider")),s(r.MDXTag,{name:"pre",components:e},s(r.MDXTag,{name:"code",components:e,parentName:"pre",props:{className:"language-.jsx",metaString:""}},"<RangeSlider\n  min={0}\n  max={100}\n  defaultValue={[8, 64]}\n/>\n")),s(r.MDXTag,{name:"h2",components:e,props:{id:"props"}},s(r.MDXTag,{name:"a",components:e,parentName:"h2",props:{href:"#props","aria-hidden":"true"}},s(r.MDXTag,{name:"span",components:e,parentName:"a",props:{className:"icon icon-link"}})),"Props"),s(r.MDXTag,{name:"table",components:e},s(r.MDXTag,{name:"thead",components:e,parentName:"table"},s(r.MDXTag,{name:"tr",components:e,parentName:"thead"},s(r.MDXTag,{name:"th",components:e,parentName:"tr",props:{align:null}},"Prop"),s(r.MDXTag,{name:"th",components:e,parentName:"tr",props:{align:null}},"Type"),s(r.MDXTag,{name:"th",components:e,parentName:"tr",props:{align:null}},"Description"))),s(r.MDXTag,{name:"tbody",components:e,parentName:"table"},s(r.MDXTag,{name:"tr",components:e,parentName:"tbody"},s(r.MDXTag,{name:"td",components:e,parentName:"tr",props:{align:null}},s(r.MDXTag,{name:"inlineCode",components:e,parentName:"td"},"min")),s(r.MDXTag,{name:"td",components:e,parentName:"tr",props:{align:null}},"number"),s(r.MDXTag,{name:"td",components:e,parentName:"tr",props:{align:null}},"The minimum value of the slider")),s(r.MDXTag,{name:"tr",components:e,parentName:"tbody"},s(r.MDXTag,{name:"td",components:e,parentName:"tr",props:{align:null}},s(r.MDXTag,{name:"inlineCode",components:e,parentName:"td"},"max")),s(r.MDXTag,{name:"td",components:e,parentName:"tr",props:{align:null}},"number"),s(r.MDXTag,{name:"td",components:e,parentName:"tr",props:{align:null}},"The maximum value of the slider")),s(r.MDXTag,{name:"tr",components:e,parentName:"tbody"},s(r.MDXTag,{name:"td",components:e,parentName:"tr",props:{align:null}},s(r.MDXTag,{name:"inlineCode",components:e,parentName:"td"},"defaultValue")),s(r.MDXTag,{name:"td",components:e,parentName:"tr",props:{align:null}},"array"),s(r.MDXTag,{name:"td",components:e,parentName:"tr",props:{align:null}},"Set initial value of slider")),s(r.MDXTag,{name:"tr",components:e,parentName:"tbody"},s(r.MDXTag,{name:"td",components:e,parentName:"tr",props:{align:null}},s(r.MDXTag,{name:"inlineCode",components:e,parentName:"td"},"value")),s(r.MDXTag,{name:"td",components:e,parentName:"tr",props:{align:null}},"array"),s(r.MDXTag,{name:"td",components:e,parentName:"tr",props:{align:null}},"Set current value of slider")),s(r.MDXTag,{name:"tr",components:e,parentName:"tbody"},s(r.MDXTag,{name:"td",components:e,parentName:"tr",props:{align:null}},s(r.MDXTag,{name:"inlineCode",components:e,parentName:"td"},"onChange")),s(r.MDXTag,{name:"td",components:e,parentName:"tr",props:{align:null}},"function"),s(r.MDXTag,{name:"td",components:e,parentName:"tr",props:{align:null}},"triggered when value changes")),s(r.MDXTag,{name:"tr",components:e,parentName:"tbody"},s(r.MDXTag,{name:"td",components:e,parentName:"tr",props:{align:null}},s(r.MDXTag,{name:"inlineCode",components:e,parentName:"td"},"ariaLabelGroupForHandles")),s(r.MDXTag,{name:"td",components:e,parentName:"tr",props:{align:null}},"array (strings)"),s(r.MDXTag,{name:"td",components:e,parentName:"tr",props:{align:null}},"Set aria-label for each handle")),s(r.MDXTag,{name:"tr",components:e,parentName:"tbody"},s(r.MDXTag,{name:"td",components:e,parentName:"tr",props:{align:null}},s(r.MDXTag,{name:"inlineCode",components:e,parentName:"td"},"ariaLabelledByGroupForHandles")),s(r.MDXTag,{name:"td",components:e,parentName:"tr",props:{align:null}},"array (strings)"),s(r.MDXTag,{name:"td",components:e,parentName:"tr",props:{align:null}},"Set aria-labelledby for each handle")),s(r.MDXTag,{name:"tr",components:e,parentName:"tbody"},s(r.MDXTag,{name:"td",components:e,parentName:"tr",props:{align:null}},s(r.MDXTag,{name:"inlineCode",components:e,parentName:"td"},"ariaValueTextFormattersForHandles")),s(r.MDXTag,{name:"td",components:e,parentName:"tr",props:{align:null}},"array (functions)"),s(r.MDXTag,{name:"td",components:e,parentName:"tr",props:{align:null}},"Pass a function to each handle to calculate aria-valuetext from value")))),s(r.MDXTag,{name:"p",components:e},"For more props, see the ",s(r.MDXTag,{name:"a",components:e,parentName:"p",props:{href:"https://github.com/react-component/slider"}},"react-component-slider docs")))}}},[["1LMR",0,1]]]);
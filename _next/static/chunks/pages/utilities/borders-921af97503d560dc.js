(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[566],{51337:function(n,e,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/utilities/borders",function(){return a(89370)}])},89370:function(n,e,a){"use strict";a.r(e),a.d(e,{default:function(){return p}});var o=a(98254),r=a(45202),s=(a(46393),a(22190));function p(n){var e=n.components;(0,o.Z)(n,["components"]);return(0,r.jsxs)(s.MDXTag,{name:"wrapper",components:e,children:[(0,r.jsxs)(s.MDXTag,{name:"h1",components:e,props:{id:"borders"},children:[(0,r.jsx)(s.MDXTag,{name:"a",components:e,parentName:"h1",props:{href:"#borders","aria-hidden":"true"},children:(0,r.jsx)(s.MDXTag,{name:"span",components:e,parentName:"a",props:{className:"icon icon-link"}})}),"borders"]}),(0,r.jsx)(s.MDXTag,{name:"p",components:e,children:"A utility function to apply borders to a component."}),(0,r.jsxs)(s.MDXTag,{name:"h2",components:e,props:{id:"syntax"},children:[(0,r.jsx)(s.MDXTag,{name:"a",components:e,parentName:"h2",props:{href:"#syntax","aria-hidden":"true"},children:(0,r.jsx)(s.MDXTag,{name:"span",components:e,parentName:"a",props:{className:"icon icon-link"}})}),"Syntax"]}),(0,r.jsx)(s.MDXTag,{name:"pre",components:e,children:(0,r.jsx)(s.MDXTag,{name:"code",components:e,parentName:"pre",props:{className:"language-js",metaString:""},children:"borders(props)\n"})}),(0,r.jsxs)(s.MDXTag,{name:"h2",components:e,props:{id:"usage"},children:[(0,r.jsx)(s.MDXTag,{name:"a",components:e,parentName:"h2",props:{href:"#usage","aria-hidden":"true"},children:(0,r.jsx)(s.MDXTag,{name:"span",components:e,parentName:"a",props:{className:"icon icon-link"}})}),"Usage"]}),(0,r.jsx)(s.MDXTag,{name:"pre",components:e,children:(0,r.jsx)(s.MDXTag,{name:"code",components:e,parentName:"pre",props:{className:"language-jsx",metaString:""},children:"const Input = styled.input`\n  ${borders}\n`\n"})}),(0,r.jsxs)(s.MDXTag,{name:"h2",components:e,props:{id:"arguments"},children:[(0,r.jsx)(s.MDXTag,{name:"a",components:e,parentName:"h2",props:{href:"#arguments","aria-hidden":"true"},children:(0,r.jsx)(s.MDXTag,{name:"span",components:e,parentName:"a",props:{className:"icon icon-link"}})}),"Arguments"]}),(0,r.jsxs)(s.MDXTag,{name:"table",components:e,children:[(0,r.jsx)(s.MDXTag,{name:"thead",components:e,parentName:"table",children:(0,r.jsxs)(s.MDXTag,{name:"tr",components:e,parentName:"thead",children:[(0,r.jsx)(s.MDXTag,{name:"th",components:e,parentName:"tr",props:{align:null},children:"Argument"}),(0,r.jsx)(s.MDXTag,{name:"th",components:e,parentName:"tr",props:{align:null},children:"Type"}),(0,r.jsx)(s.MDXTag,{name:"th",components:e,parentName:"tr",props:{align:null},children:"Description"})]})}),(0,r.jsx)(s.MDXTag,{name:"tbody",components:e,parentName:"table",children:(0,r.jsxs)(s.MDXTag,{name:"tr",components:e,parentName:"tbody",children:[(0,r.jsx)(s.MDXTag,{name:"td",components:e,parentName:"tr",props:{align:null},children:(0,r.jsx)(s.MDXTag,{name:"inlineCode",components:e,parentName:"td",children:"props"})}),(0,r.jsx)(s.MDXTag,{name:"td",components:e,parentName:"tr",props:{align:null},children:"Object"}),(0,r.jsxs)(s.MDXTag,{name:"td",components:e,parentName:"tr",props:{align:null},children:["The props passed to the component, must contain a ",(0,r.jsx)(s.MDXTag,{name:"inlineCode",components:e,parentName:"td",children:"theme"})," prop."]})]})})]}),(0,r.jsxs)(s.MDXTag,{name:"h2",components:e,props:{id:"example"},children:[(0,r.jsx)(s.MDXTag,{name:"a",components:e,parentName:"h2",props:{href:"#example","aria-hidden":"true"},children:(0,r.jsx)(s.MDXTag,{name:"span",components:e,parentName:"a",props:{className:"icon icon-link"}})}),"Example"]}),(0,r.jsx)(s.MDXTag,{name:"pre",components:e,children:(0,r.jsx)(s.MDXTag,{name:"code",components:e,parentName:"pre",props:{className:"language-jsx",metaString:""},children:"import { borders } from 'pcln-design-system'\n\nconst Input = styled.input`\n  ${borders}\n`\n"})}),(0,r.jsx)(s.MDXTag,{name:"p",components:e,children:"Add the utility to a styled-component to apply a border and a focus border color."}),(0,r.jsx)(s.MDXTag,{name:"pre",components:e,children:(0,r.jsx)(s.MDXTag,{name:"code",components:e,parentName:"pre",props:{className:"language-.jsx",metaString:""},children:'<Input placeholder="default color" />\n'})}),(0,r.jsxs)(s.MDXTag,{name:"p",components:e,children:["Without a ",(0,r.jsx)(s.MDXTag,{name:"inlineCode",components:e,parentName:"p",children:"color"})," prop the border color will default to use ",(0,r.jsx)(s.MDXTag,{name:"inlineCode",components:e,parentName:"p",children:"border.base"})," and the focus color will be ",(0,r.jsx)(s.MDXTag,{name:"inlineCode",components:e,parentName:"p",children:"primary.base"}),"."]}),(0,r.jsx)(s.MDXTag,{name:"pre",components:e,children:(0,r.jsx)(s.MDXTag,{name:"code",components:e,parentName:"pre",props:{className:"language-.jsx",metaString:""},children:'<Input color="primary" placeholder="primary color" />\n'})}),(0,r.jsxs)(s.MDXTag,{name:"p",components:e,children:["Adding a ",(0,r.jsx)(s.MDXTag,{name:"inlineCode",components:e,parentName:"p",children:"color"})," prop to your component will change both the border and focus color to the passed in color. You can pass a base palette color (",(0,r.jsx)(s.MDXTag,{name:"inlineCode",components:e,parentName:"p",children:'color="primary"'}),") or a palette color with a shade (",(0,r.jsx)(s.MDXTag,{name:"inlineCode",components:e,parentName:"p",children:'color="primary.dark"'}),")."]})]})}}},function(n){n.O(0,[9774,2888,179],(function(){return e=51337,n(n.s=e);var e}));var e=n.O();_N_E=e}]);
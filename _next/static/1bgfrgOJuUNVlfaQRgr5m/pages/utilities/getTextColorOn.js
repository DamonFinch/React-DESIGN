(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{"24Et":function(e,n,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/utilities/getTextColorOn",function(){return a("j2k7")}])},j2k7:function(e,n,a){"use strict";a.r(n);var o=a("sKcO"),t=a("opOY"),p=a.n(t),m=a("yr7G"),r=["components"],s=p.a.createElement;n.default=function(e){var n=e.components;Object(o.a)(e,r);return s(m.MDXTag,{name:"wrapper",components:n},s(m.MDXTag,{name:"h1",components:n,props:{id:"gettextcoloron"}},s(m.MDXTag,{name:"a",components:n,parentName:"h1",props:{href:"#gettextcoloron","aria-hidden":"true"}},s(m.MDXTag,{name:"span",components:n,parentName:"a",props:{className:"icon icon-link"}})),"getTextColorOn"),s(m.MDXTag,{name:"p",components:n},"A utility function to get the text color that belongs on a background color."),s(m.MDXTag,{name:"h2",components:n,props:{id:"syntax"}},s(m.MDXTag,{name:"a",components:n,parentName:"h2",props:{href:"#syntax","aria-hidden":"true"}},s(m.MDXTag,{name:"span",components:n,parentName:"a",props:{className:"icon icon-link"}})),"Syntax"),s(m.MDXTag,{name:"pre",components:n},s(m.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-js",metaString:""}},"getTextColorOn(colorShade)(props)\n")),s(m.MDXTag,{name:"h2",components:n,props:{id:"usage"}},s(m.MDXTag,{name:"a",components:n,parentName:"h2",props:{href:"#usage","aria-hidden":"true"}},s(m.MDXTag,{name:"span",components:n,parentName:"a",props:{className:"icon icon-link"}})),"Usage"),s(m.MDXTag,{name:"pre",components:n},s(m.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx",metaString:""}},"const Component = styled.div`\n  color: ${getTextColorOn('primary.base')};\n`\n")),s(m.MDXTag,{name:"h2",components:n,props:{id:"arguments"}},s(m.MDXTag,{name:"a",components:n,parentName:"h2",props:{href:"#arguments","aria-hidden":"true"}},s(m.MDXTag,{name:"span",components:n,parentName:"a",props:{className:"icon icon-link"}})),"Arguments"),s(m.MDXTag,{name:"table",components:n},s(m.MDXTag,{name:"thead",components:n,parentName:"table"},s(m.MDXTag,{name:"tr",components:n,parentName:"thead"},s(m.MDXTag,{name:"th",components:n,parentName:"tr",props:{align:null}},"Argument"),s(m.MDXTag,{name:"th",components:n,parentName:"tr",props:{align:null}},"Type"),s(m.MDXTag,{name:"th",components:n,parentName:"tr",props:{align:null}},"Description"))),s(m.MDXTag,{name:"tbody",components:n,parentName:"table"},s(m.MDXTag,{name:"tr",components:n,parentName:"tbody"},s(m.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:null}},s(m.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"colorShade")),s(m.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:null}},"String"),s(m.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:null}},"The full palette color and shade expressed in dot notation, example ",s(m.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"primary.base"),".")),s(m.MDXTag,{name:"tr",components:n,parentName:"tbody"},s(m.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:null}},s(m.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"props")),s(m.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:null}},"Object"),s(m.MDXTag,{name:"td",components:n,parentName:"tr",props:{align:null}},"The props passed to the component, must contain a ",s(m.MDXTag,{name:"inlineCode",components:n,parentName:"td"},"theme")," prop.")))),s(m.MDXTag,{name:"h2",components:n,props:{id:"example"}},s(m.MDXTag,{name:"a",components:n,parentName:"h2",props:{href:"#example","aria-hidden":"true"}},s(m.MDXTag,{name:"span",components:n,parentName:"a",props:{className:"icon icon-link"}})),"Example"),s(m.MDXTag,{name:"pre",components:n},s(m.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx",metaString:""}},"const TextDemo = styled.div`\n  color: ${getTextColorOn('primary.base')};\n  background-color ${getPaletteColor('primary.base')};\n`\n")),s(m.MDXTag,{name:"pre",components:n},s(m.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-.jsx",metaString:""}},"<TextDemo>Lightest text color</TextDemo>\n")),s(m.MDXTag,{name:"p",components:n},"Pass a full palette color and shade to return the text color that belongs on that color. The above example would return ",s(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"text.lightest")," while ",s(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"getTextColorOn('primary.light')")," would return ",s(m.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"text.base"),"."))}}},[["24Et",0,1]]]);